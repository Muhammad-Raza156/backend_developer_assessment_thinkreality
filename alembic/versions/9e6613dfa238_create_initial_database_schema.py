"""Create initial database schema

Revision ID: 9e6613dfa238
Revises: 
Create Date: 2025-07-26 13:56:09.879911

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '9e6613dfa238'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('units',
    sa.Column('unit_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('unique_key', sa.String(), nullable=False),
    sa.Column('building_name', sa.String(), nullable=False),
    sa.Column('unit_number', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('unit_id'),
    sa.UniqueConstraint('unique_key')
    )
    
    op.create_table('owners',
    sa.Column('owner_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('owner_type', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.DATE(), nullable=True),
    sa.Column('nationality', sa.String(), nullable=True),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('company_type', sa.String(), nullable=True),
    sa.Column('trade_license_number', sa.String(), nullable=True),
    sa.Column('phone_primary', sa.String(), nullable=True),
    sa.Column('phone_secondary', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('emirates_id', sa.String(), nullable=True),
    sa.Column('passport_number', sa.String(), nullable=True),
    sa.Column('visa_number', sa.String(), nullable=True),
    sa.Column('address_line1', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('preferred_contact_method', sa.String(), nullable=True),
    sa.Column('communication_language', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("owner_type IN ('individual', 'corporate')", name='check_owner_type'),
    sa.CheckConstraint("NOT (owner_type = 'individual' AND emirates_id IS NULL)", name='check_individual_owner_eid'),
    sa.CheckConstraint("emirates_id IS NULL OR emirates_id ~ '^784-[0-9]{4}-[0-9]{7}-[0-9]{1}$'", name='check_emirates_id_format'),
    sa.PrimaryKeyConstraint('owner_id'),
    sa.UniqueConstraint('emirates_id')
    )
    
    op.create_table('ownership_history',
    sa.Column('history_id', sa.Integer(), nullable=False),
    sa.Column('unit_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('owner_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ownership_start_date', sa.DATE(), nullable=False),
    sa.Column('ownership_end_date', sa.DATE(), nullable=True),
    sa.Column('ownership_percentage', sa.Float(), nullable=False),
    sa.Column('is_current_owner', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('purchase_price', sa.Float(), nullable=True),
    sa.Column('purchase_currency', sa.String(length=3), nullable=True),
    sa.Column('financing_type', sa.String(), nullable=True),
    sa.Column('title_deed_number', sa.String(), nullable=True),
    sa.Column('registration_number', sa.String(), nullable=True),
    sa.Column('transaction_type', sa.String(), nullable=True),
    sa.Column('transfer_reason', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['owners.owner_id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.unit_id'], ),
    sa.CheckConstraint('ownership_percentage > 0 AND ownership_percentage <= 100', name='ownership_percentage_check'),
    sa.PrimaryKeyConstraint('history_id')
    )
    
    op.create_table('ownership_transfers',
    sa.Column('transfer_id', sa.Integer(), nullable=False),
    sa.Column('unit_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('transfer_type', sa.String(), nullable=False),
    sa.Column('transfer_date', sa.DATE(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=True),
    sa.Column('transfer_currency', sa.String(length=3), nullable=True),
    sa.Column('legal_reason', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('initiated_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['unit_id'], ['units.unit_id'], ),
    sa.CheckConstraint('transfer_date <= now()', name='transfer_date_not_in_future_check'),
    sa.PrimaryKeyConstraint('transfer_id')
    )
    
    op.create_table('transfer_documents',
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('transfer_id', sa.Integer(), nullable=False),
    sa.Column('document_type', sa.String(), nullable=True),
    sa.Column('document_name', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('upload_date', sa.DATE(), nullable=True),
    sa.Column('uploaded_by', sa.String(), nullable=True),
    sa.Column('verification_status', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['transfer_id'], ['ownership_transfers.transfer_id'], ),
    sa.PrimaryKeyConstraint('document_id')
    )
    
    op.create_table('audit_logs',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('table_name', sa.String(), nullable=True),
    sa.Column('record_id', sa.String(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('old_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('new_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('changed_by', sa.String(), nullable=True),
    sa.Column('change_reason', sa.String(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('log_id')
    )
    
    # Create indexes
    op.create_index('idx_ownership_history_unit_id', 'ownership_history', ['unit_id'])
    op.create_index('idx_ownership_history_owner_id', 'ownership_history', ['owner_id'])
    op.create_index('idx_ownership_transfers_unit_id', 'ownership_transfers', ['unit_id'])
    op.create_index('idx_transfer_documents_transfer_id', 'transfer_documents', ['transfer_id'])
    op.create_index('idx_audit_logs_record_id', 'audit_logs', ['record_id'])
    op.create_index('idx_audit_logs_changed_by', 'audit_logs', ['changed_by'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_audit_logs_changed_by', table_name='audit_logs')
    op.drop_index('idx_audit_logs_record_id', table_name='audit_logs')
    op.drop_index('idx_transfer_documents_transfer_id', table_name='transfer_documents')
    op.drop_index('idx_ownership_transfers_unit_id', table_name='ownership_transfers')
    op.drop_index('idx_ownership_history_owner_id', table_name='ownership_history')
    op.drop_index('idx_ownership_history_unit_id', table_name='ownership_history')
    
    op.drop_table('audit_logs')
    op.drop_table('transfer_documents')
    op.drop_table('ownership_transfers')
    op.drop_table('ownership_history')
    op.drop_table('owners')
    op.drop_table('units')
    # ### end Alembic commands ###